{"ast":null,"code":"/*! @azure/msal-common v13.3.3 2024-06-06 */\n'use strict';\n\nimport { __extends } from '../../_virtual/_tslib.js';\nimport { PerformanceClient } from './PerformanceClient.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar StubPerformanceMeasurement =\n/** @class */\nfunction () {\n  function StubPerformanceMeasurement() {}\n  /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n\n\n  StubPerformanceMeasurement.prototype.startMeasurement = function () {};\n  /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n\n\n  StubPerformanceMeasurement.prototype.endMeasurement = function () {};\n\n  StubPerformanceMeasurement.prototype.flushMeasurement = function () {\n    return null;\n  };\n\n  return StubPerformanceMeasurement;\n}();\n\nvar StubPerformanceClient =\n/** @class */\nfunction (_super) {\n  __extends(StubPerformanceClient, _super);\n\n  function StubPerformanceClient() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StubPerformanceClient.prototype.generateId = function () {\n    return \"callback-id\";\n  };\n\n  StubPerformanceClient.prototype.startPerformanceMeasuremeant = function () {\n    return new StubPerformanceMeasurement();\n  };\n\n  StubPerformanceClient.prototype.startPerformanceMeasurement = function () {\n    return new StubPerformanceMeasurement();\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n\n\n  StubPerformanceClient.prototype.calculateQueuedTime = function (preQueueTime, currentTime) {\n    return 0;\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n\n\n  StubPerformanceClient.prototype.addQueueMeasurement = function (eventName, correlationId, queueTime) {\n    return;\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n\n\n  StubPerformanceClient.prototype.setPreQueueTime = function (eventName, correlationId) {\n    return;\n  };\n\n  return StubPerformanceClient;\n}(PerformanceClient);\n\nexport { StubPerformanceClient, StubPerformanceMeasurement };","map":{"version":3,"sources":["../../../src/telemetry/performance/StubPerformanceClient.ts"],"names":[],"mappings":";;;;;AAAA;;;AAGG;;AAOH,IAAA,0BAAA;AAAA;AAAA,YAAA;AAAA,WAAA,0BAAA,GAAA,CASC;;;;AAPG,EAAA,0BAAgB,CAAA,SAAhB,CAAgB,gBAAhB,GAAA,YAAA,CAA4B,CAA5B;;;;AAEA,EAAA,0BAAc,CAAA,SAAd,CAAc,cAAd,GAAA,YAAA,CAA0B,CAA1B;;AACA,EAAA,0BAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;AACI,WAAO,IAAP;AACH,GAFD;;AAIJ,SAAC,0BAAD;AAAC,CATD,EAAA;;AAWA,IAAA,qBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2C,EAAA,SAAiB,CAAA,qBAAA,EAAA,MAAA,CAAjB;;AAA3C,WAAA,qBAAA,GAAA;;AA4BC;;AA3BG,EAAA,qBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACI,WAAO,aAAP;AACH,GAFD;;AAIA,EAAA,qBAAA,CAAA,SAAA,CAAA,4BAAA,GAAA,YAAA;AACI,WAAO,IAAI,0BAAJ,EAAP;AACH,GAFD;;AAIA,EAAA,qBAAA,CAAA,SAAA,CAAA,2BAAA,GAAA,YAAA;AACI,WAAO,IAAI,0BAAJ,EAAP;AACH,GAFD;;;;AAKA,EAAA,qBAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,YAApB,EAA0C,WAA1C,EAA6D;AACzD,WAAO,CAAP;AACH,GAFD;;;;AAKA,EAAA,qBAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,SAApB,EAAkD,aAAlD,EAAyE,SAAzE,EAA0F;AACtF;AACH,GAFD;;;;AAKA,EAAA,qBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,SAAhB,EAA8C,aAA9C,EAAgF;AAC5E;AACH,GAFD;;AAIJ,SAAC,qBAAD;AA5BA,CAAA,CAA2C,iBAA3C,CAAA","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IPerformanceClient } from \"./IPerformanceClient\";\r\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement\";\r\nimport { PerformanceClient } from \"./PerformanceClient\";\r\nimport { PerformanceEvents } from \"./PerformanceEvent\";\r\n\r\nexport class StubPerformanceMeasurement implements IPerformanceMeasurement {\r\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\r\n    startMeasurement(): void { }\r\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\r\n    endMeasurement(): void { }\r\n    flushMeasurement(): number | null {\r\n        return null;\r\n    }\r\n    \r\n}\r\n\r\nexport class StubPerformanceClient extends PerformanceClient implements IPerformanceClient {\r\n    generateId(): string {\r\n        return \"callback-id\";\r\n    }\r\n    \r\n    startPerformanceMeasuremeant(): IPerformanceMeasurement {\r\n        return new StubPerformanceMeasurement();\r\n    }\r\n\r\n    startPerformanceMeasurement(): IPerformanceMeasurement {\r\n        return new StubPerformanceMeasurement();\r\n    }\r\n\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    calculateQueuedTime(preQueueTime: number, currentTime: number): number {\r\n        return 0;\r\n    }\r\n\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    addQueueMeasurement(eventName: PerformanceEvents, correlationId: string, queueTime: number): void {\r\n        return;\r\n    }\r\n\r\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n    setPreQueueTime(eventName: PerformanceEvents, correlationId?: string | undefined): void {\r\n        return;\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}