{"ast":null,"code":"/*! @azure/msal-browser v2.39.0 2024-06-06 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache = new Map();\n  }\n\n  MemoryStorage.prototype.getItem = function (key) {\n    return this.cache.get(key) || null;\n  };\n\n  MemoryStorage.prototype.setItem = function (key, value) {\n    this.cache.set(key, value);\n  };\n\n  MemoryStorage.prototype.removeItem = function (key) {\n    this.cache.delete(key);\n  };\n\n  MemoryStorage.prototype.getKeys = function () {\n    var cacheKeys = [];\n    this.cache.forEach(function (value, key) {\n      cacheKeys.push(key);\n    });\n    return cacheKeys;\n  };\n\n  MemoryStorage.prototype.containsKey = function (key) {\n    return this.cache.has(key);\n  };\n\n  MemoryStorage.prototype.clear = function () {\n    this.cache.clear();\n  };\n\n  return MemoryStorage;\n}();\n\nexport { MemoryStorage };","map":{"version":3,"sources":["../../src/cache/MemoryStorage.ts"],"names":[],"mappings":";;AAAA;;;AAGG;;AAIH,IAAA,aAAA;AAAA;AAAA,YAAA;AAII,WAAA,aAAA,GAAA;AACI,SAAK,KAAL,GAAa,IAAI,GAAJ,EAAb;AACH;;AAED,EAAA,aAAO,CAAA,SAAP,CAAO,OAAP,GAAA,UAAQ,GAAR,EAAmB;AACf,WAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,KAAuB,IAA9B;AACH,GAFD;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,GAAR,EAAqB,KAArB,EAA6B;AACzB,SAAK,KAAL,CAAW,GAAX,CAAe,GAAf,EAAoB,KAApB;AACH,GAFD;;AAIA,EAAA,aAAU,CAAA,SAAV,CAAU,UAAV,GAAA,UAAW,GAAX,EAAsB;AAClB,SAAK,KAAL,CAAW,MAAX,CAAkB,GAAlB;AACH,GAFD;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACI,QAAM,SAAS,GAAa,EAA5B;AACA,SAAK,KAAL,CAAW,OAAX,CAAmB,UAAC,KAAD,EAAW,GAAX,EAAsB;AACrC,MAAA,SAAS,CAAC,IAAV,CAAe,GAAf;AACH,KAFD;AAGA,WAAO,SAAP;AACH,GAND;;AAQA,EAAA,aAAW,CAAA,SAAX,CAAW,WAAX,GAAA,UAAY,GAAZ,EAAuB;AACnB,WAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAP;AACH,GAFD;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACI,SAAK,KAAL,CAAW,KAAX;AACH,GAFD;;AAGJ,SAAC,aAAD;AAAC,CAnCD,EAAA","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IWindowStorage } from \"./IWindowStorage\";\r\n\r\nexport class MemoryStorage<T> implements IWindowStorage<T> {\r\n\r\n    private cache: Map<string, T>;\r\n\r\n    constructor() {\r\n        this.cache = new Map<string, T>();\r\n    }\r\n\r\n    getItem(key: string): T | null {\r\n        return this.cache.get(key) || null;\r\n    }\r\n\r\n    setItem(key: string, value: T): void {\r\n        this.cache.set(key, value);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        this.cache.delete(key);\r\n    }\r\n\r\n    getKeys(): string[] {\r\n        const cacheKeys: string[] = [];\r\n        this.cache.forEach((value: T, key: string) => {\r\n            cacheKeys.push(key);\r\n        });\r\n        return cacheKeys;\r\n    }\r\n\r\n    containsKey(key: string): boolean {\r\n        return this.cache.has(key);\r\n    }\r\n\r\n    clear() :void {\r\n        this.cache.clear();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}