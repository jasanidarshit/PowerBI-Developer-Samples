{"ast":null,"code":"/*! @azure/msal-browser v2.39.0 2024-06-06 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { StringUtils, AuthError } from '@azure/msal-common';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\n\nvar BrowserAuthErrorMessage = {\n  pkceNotGenerated: {\n    code: \"pkce_not_created\",\n    desc: \"The PKCE code challenge and verifier could not be generated.\"\n  },\n  cryptoDoesNotExist: {\n    code: \"crypto_nonexistent\",\n    desc: \"The crypto object or function is not available.\"\n  },\n  httpMethodNotImplementedError: {\n    code: \"http_method_not_implemented\",\n    desc: \"The HTTP method given has not been implemented in this library.\"\n  },\n  emptyNavigateUriError: {\n    code: \"empty_navigate_uri\",\n    desc: \"Navigation URI is empty. Please check stack trace for more info.\"\n  },\n  hashEmptyError: {\n    code: \"hash_empty_error\",\n    desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  hashDoesNotContainStateError: {\n    code: \"no_state_in_hash\",\n    desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\n  },\n  hashDoesNotContainKnownPropertiesError: {\n    code: \"hash_does_not_contain_known_properties\",\n    desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  unableToParseStateError: {\n    code: \"unable_to_parse_state\",\n    desc: \"Unable to parse state. Please verify that the request originated from msal.\"\n  },\n  stateInteractionTypeMismatchError: {\n    code: \"state_interaction_type_mismatch\",\n    desc: \"Hash contains state but the interaction type does not match the caller.\"\n  },\n  interactionInProgress: {\n    code: \"interaction_in_progress\",\n    desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  popupWindowError: {\n    code: \"popup_window_error\",\n    desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\n  },\n  emptyWindowError: {\n    code: \"empty_window_error\",\n    desc: \"window.open returned null or undefined window object.\"\n  },\n  userCancelledError: {\n    code: \"user_cancelled\",\n    desc: \"User cancelled the flow.\"\n  },\n  monitorPopupTimeoutError: {\n    code: \"monitor_window_timeout\",\n    desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  monitorIframeTimeoutError: {\n    code: \"monitor_window_timeout\",\n    desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\n  },\n  redirectInIframeError: {\n    code: \"redirect_in_iframe\",\n    desc: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\n  },\n  blockTokenRequestsInHiddenIframeError: {\n    code: \"block_iframe_reload\",\n    desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\n  },\n  blockAcquireTokenInPopupsError: {\n    code: \"block_nested_popups\",\n    desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\n  },\n  iframeClosedPrematurelyError: {\n    code: \"iframe_closed_prematurely\",\n    desc: \"The iframe being monitored was closed prematurely.\"\n  },\n  silentLogoutUnsupportedError: {\n    code: \"silent_logout_unsupported\",\n    desc: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\"\n  },\n  noAccountError: {\n    code: \"no_account_error\",\n    desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\n  },\n  silentPromptValueError: {\n    code: \"silent_prompt_value_error\",\n    desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\"\n  },\n  noTokenRequestCacheError: {\n    code: \"no_token_request_cache_error\",\n    desc: \"No token request found in cache.\"\n  },\n  unableToParseTokenRequestCacheError: {\n    code: \"unable_to_parse_token_request_cache_error\",\n    desc: \"The cached token request could not be parsed.\"\n  },\n  noCachedAuthorityError: {\n    code: \"no_cached_authority_error\",\n    desc: \"No cached authority found.\"\n  },\n  authRequestNotSet: {\n    code: \"auth_request_not_set_error\",\n    desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\n  },\n  invalidCacheType: {\n    code: \"invalid_cache_type\",\n    desc: \"Invalid cache type\"\n  },\n  notInBrowserEnvironment: {\n    code: \"non_browser_environment\",\n    desc: \"Login and token requests are not supported in non-browser environments.\"\n  },\n  databaseNotOpen: {\n    code: \"database_not_open\",\n    desc: \"Database is not open!\"\n  },\n  noNetworkConnectivity: {\n    code: \"no_network_connectivity\",\n    desc: \"No network connectivity. Check your internet connection.\"\n  },\n  postRequestFailed: {\n    code: \"post_request_failed\",\n    desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\n  },\n  getRequestFailed: {\n    code: \"get_request_failed\",\n    desc: \"Network request failed. Please check the network trace to determine root cause.\"\n  },\n  failedToParseNetworkResponse: {\n    code: \"failed_to_parse_response\",\n    desc: \"Failed to parse network response. Check network trace.\"\n  },\n  unableToLoadTokenError: {\n    code: \"unable_to_load_token\",\n    desc: \"Error loading token to cache.\"\n  },\n  signingKeyNotFoundInStorage: {\n    code: \"crypto_key_not_found\",\n    desc: \"Cryptographic Key or Keypair not found in browser storage.\"\n  },\n  authCodeRequired: {\n    code: \"auth_code_required\",\n    desc: \"An authorization code must be provided (as the `code` property on the request) to this flow.\"\n  },\n  authCodeOrNativeAccountRequired: {\n    code: \"auth_code_or_nativeAccountId_required\",\n    desc: \"An authorization code or nativeAccountId must be provided to this flow.\"\n  },\n  spaCodeAndNativeAccountPresent: {\n    code: \"spa_code_and_nativeAccountId_present\",\n    desc: \"Request cannot contain both spa code and native account id.\"\n  },\n  databaseUnavailable: {\n    code: \"database_unavailable\",\n    desc: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\n  },\n  unableToAcquireTokenFromNativePlatform: {\n    code: \"unable_to_acquire_token_from_native_platform\",\n    desc: \"Unable to acquire token from native platform. For a list of possible reasons visit aka.ms/msaljs/browser-errors.\"\n  },\n  nativeHandshakeTimeout: {\n    code: \"native_handshake_timeout\",\n    desc: \"Timed out while attempting to establish connection to browser extension\"\n  },\n  nativeExtensionNotInstalled: {\n    code: \"native_extension_not_installed\",\n    desc: \"Native extension is not installed. If you think this is a mistake call the initialize function.\"\n  },\n  nativeConnectionNotEstablished: {\n    code: \"native_connection_not_established\",\n    desc: \"Connection to native platform has not been established. Please install a compatible browser extension and run initialize(). For more please visit aka.ms/msaljs/browser-errors.\"\n  },\n  nativeBrokerCalledBeforeInitialize: {\n    code: \"native_broker_called_before_initialize\",\n    desc: \"You must call and await the initialize function before attempting to call any other MSAL API when native brokering is enabled. For more please visit aka.ms/msaljs/browser-errors.\"\n  },\n  nativePromptNotSupported: {\n    code: \"native_prompt_not_supported\",\n    desc: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\"\n  }\n};\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\n\nvar BrowserAuthError =\n/** @class */\nfunction (_super) {\n  __extends(BrowserAuthError, _super);\n\n  function BrowserAuthError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    Object.setPrototypeOf(_this, BrowserAuthError.prototype);\n    _this.name = \"BrowserAuthError\";\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when PKCE is not implemented.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createPkceNotGeneratedError = function (errDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code, BrowserAuthErrorMessage.pkceNotGenerated.desc + \" Detail:\" + errDetail);\n  };\n  /**\r\n   * Creates an error thrown when the crypto object is unavailable.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createCryptoNotAvailableError = function (errDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code, BrowserAuthErrorMessage.cryptoDoesNotExist.desc + \" Detail:\" + errDetail);\n  };\n  /**\r\n   * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n   * @param method\r\n   */\n\n\n  BrowserAuthError.createHttpMethodNotImplementedError = function (method) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code, BrowserAuthErrorMessage.httpMethodNotImplementedError.desc + \" Given Method: \" + method);\n  };\n  /**\r\n   * Creates an error thrown when the navigation URI is empty.\r\n   */\n\n\n  BrowserAuthError.createEmptyNavigationUriError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   * @param hashValue\r\n   */\n\n\n  BrowserAuthError.createEmptyHashError = function (hashValue) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, BrowserAuthErrorMessage.hashEmptyError.desc + \" Given Url: \" + hashValue);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   */\n\n\n  BrowserAuthError.createHashDoesNotContainStateError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value does not contain known properties\r\n   */\n\n\n  BrowserAuthError.createHashDoesNotContainKnownPropertiesError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the hash string value is unexpectedly empty.\r\n   */\n\n\n  BrowserAuthError.createUnableToParseStateError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\r\n   */\n\n\n  BrowserAuthError.createStateInteractionTypeMismatchError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n   */\n\n\n  BrowserAuthError.createInteractionInProgressError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\n  };\n  /**\r\n   * Creates an error thrown when the popup window could not be opened.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createPopupWindowError = function (errDetail) {\n    var errorMessage = BrowserAuthErrorMessage.popupWindowError.desc;\n    errorMessage = !StringUtils.isEmpty(errDetail) ? errorMessage + \" Details: \" + errDetail : errorMessage;\n    return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowError.code, errorMessage);\n  };\n  /**\r\n   * Creates an error thrown when window.open returns an empty window object.\r\n   * @param errDetail\r\n   */\n\n\n  BrowserAuthError.createEmptyWindowCreatedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the user closes a popup.\r\n   */\n\n\n  BrowserAuthError.createUserCancelledError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code, BrowserAuthErrorMessage.userCancelledError.desc);\n  };\n  /**\r\n   * Creates an error thrown when monitorPopupFromHash times out for a given popup.\r\n   */\n\n\n  BrowserAuthError.createMonitorPopupTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code, BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\n  };\n  /**\r\n   * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\r\n   */\n\n\n  BrowserAuthError.createMonitorIframeTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code, BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\n  };\n  /**\r\n   * Creates an error thrown when navigateWindow is called inside an iframe or brokered applications.\r\n   * @param windowParentCheck\r\n   */\n\n\n  BrowserAuthError.createRedirectInIframeError = function (windowParentCheck) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, BrowserAuthErrorMessage.redirectInIframeError.desc + \" (window.parent !== window) => \" + windowParentCheck);\n  };\n  /**\r\n   * Creates an error thrown when an auth reload is done inside an iframe.\r\n   */\n\n\n  BrowserAuthError.createBlockReloadInHiddenIframeError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code, BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a popup attempts to call an acquireToken API\r\n   * @returns\r\n   */\n\n\n  BrowserAuthError.createBlockAcquireTokenInPopupsError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code, BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\n  };\n  /**\r\n   * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n   */\n\n\n  BrowserAuthError.createIframeClosedPrematurelyError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the logout API is called on any of the silent interaction clients\r\n   */\n\n\n  BrowserAuthError.createSilentLogoutUnsupportedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.silentLogoutUnsupportedError.code, BrowserAuthErrorMessage.silentLogoutUnsupportedError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\r\n   */\n\n\n  BrowserAuthError.createNoAccountError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\n  };\n  /**\r\n   * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n   */\n\n\n  BrowserAuthError.createSilentPromptValueError = function (givenPrompt) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, BrowserAuthErrorMessage.silentPromptValueError.desc + \" Given value: \" + givenPrompt);\n  };\n  /**\r\n   * Creates an error thrown when the cached token request could not be retrieved from the cache\r\n   */\n\n\n  BrowserAuthError.createUnableToParseTokenRequestCacheError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code, BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the token request could not be retrieved from the cache\r\n   */\n\n\n  BrowserAuthError.createNoTokenRequestCacheError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code, BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\n  };\n  /**\r\n   * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\r\n   */\n\n\n  BrowserAuthError.createAuthRequestNotSetError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code, BrowserAuthErrorMessage.authRequestNotSet.desc);\n  };\n  /**\r\n   * Creates an error thrown when the authority could not be retrieved from the cache\r\n   */\n\n\n  BrowserAuthError.createNoCachedAuthorityError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code, BrowserAuthErrorMessage.noCachedAuthorityError.desc);\n  };\n  /**\r\n   * Creates an error thrown if cache type is invalid.\r\n   */\n\n\n  BrowserAuthError.createInvalidCacheTypeError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, \"\" + BrowserAuthErrorMessage.invalidCacheType.desc);\n  };\n  /**\r\n   * Create an error thrown when login and token requests are made from a non-browser environment\r\n   */\n\n\n  BrowserAuthError.createNonBrowserEnvironmentError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\n  };\n  /**\r\n   * Create an error thrown when indexDB database is not open\r\n   */\n\n\n  BrowserAuthError.createDatabaseNotOpenError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\n  };\n  /**\r\n   * Create an error thrown when token fetch fails due to no internet\r\n   */\n\n\n  BrowserAuthError.createNoNetworkConnectivityError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\n  };\n  /**\r\n   * Create an error thrown when token fetch fails due to reasons other than internet connectivity\r\n   */\n\n\n  BrowserAuthError.createPostRequestFailedError = function (errorDesc, endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, BrowserAuthErrorMessage.postRequestFailed.desc + \" | Network client threw: \" + errorDesc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n  /**\r\n   * Create an error thrown when get request fails due to reasons other than internet connectivity\r\n   */\n\n\n  BrowserAuthError.createGetRequestFailedError = function (errorDesc, endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, BrowserAuthErrorMessage.getRequestFailed.desc + \" | Network client threw: \" + errorDesc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n  /**\r\n   * Create an error thrown when network client fails to parse network response\r\n   */\n\n\n  BrowserAuthError.createFailedToParseNetworkResponseError = function (endpoint) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, BrowserAuthErrorMessage.failedToParseNetworkResponse.desc + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\n  };\n  /**\r\n   * Create an error thrown when the necessary information is not available to sideload tokens\r\n   */\n\n\n  BrowserAuthError.createUnableToLoadTokenError = function (errorDetail) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToLoadTokenError.code, BrowserAuthErrorMessage.unableToLoadTokenError.desc + \" | \" + errorDetail);\n  };\n  /**\r\n   * Create an error thrown when the queried cryptographic key is not found in IndexedDB\r\n   */\n\n\n  BrowserAuthError.createSigningKeyNotFoundInStorageError = function (keyId) {\n    return new BrowserAuthError(BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code, BrowserAuthErrorMessage.signingKeyNotFoundInStorage.desc + \" | No match found for KeyId: \" + keyId);\n  };\n  /**\r\n   * Create an error when an authorization code is required but not provided\r\n   */\n\n\n  BrowserAuthError.createAuthCodeRequiredError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.authCodeRequired.code, BrowserAuthErrorMessage.authCodeRequired.desc);\n  };\n  /**\r\n   * Create an error when an authorization code or native account ID is required but not provided\r\n   */\n\n\n  BrowserAuthError.createAuthCodeOrNativeAccountIdRequiredError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.code, BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.desc);\n  };\n  /**\r\n   * Create an error when both authorization code and native account ID are provided\r\n   */\n\n\n  BrowserAuthError.createSpaCodeAndNativeAccountIdPresentError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.spaCodeAndNativeAccountPresent.code, BrowserAuthErrorMessage.spaCodeAndNativeAccountPresent.desc);\n  };\n  /**\r\n   * Create an error when IndexedDB is unavailable\r\n   */\n\n\n  BrowserAuthError.createDatabaseUnavailableError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.databaseUnavailable.code, BrowserAuthErrorMessage.databaseUnavailable.desc);\n  };\n  /**\r\n   * Create an error when native token acquisition is not possible\r\n   */\n\n\n  BrowserAuthError.createUnableToAcquireTokenFromNativePlatformError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.code, BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.desc);\n  };\n  /**\r\n   * Create an error thrown when Handshake with browser extension times out\r\n   */\n\n\n  BrowserAuthError.createNativeHandshakeTimeoutError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeHandshakeTimeout.code, BrowserAuthErrorMessage.nativeHandshakeTimeout.desc);\n  };\n  /**\r\n   * Create an error thrown when browser extension is not installed\r\n   */\n\n\n  BrowserAuthError.createNativeExtensionNotInstalledError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeExtensionNotInstalled.code, BrowserAuthErrorMessage.nativeExtensionNotInstalled.desc);\n  };\n  /**\r\n   * Create an error when native connection has not been established\r\n   * @returns\r\n   */\n\n\n  BrowserAuthError.createNativeConnectionNotEstablishedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeConnectionNotEstablished.code, BrowserAuthErrorMessage.nativeConnectionNotEstablished.desc);\n  };\n  /**\r\n   * Create an error thrown when the initialize function hasn't been called\r\n   */\n\n\n  BrowserAuthError.createNativeBrokerCalledBeforeInitialize = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.code, BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.desc);\n  };\n  /**\r\n   * Create an error thrown when requesting a token directly from the native platform with an unsupported prompt parameter e.g. select_account, login or create\r\n   * These requests must go through eSTS to ensure eSTS is aware of the new account\r\n   */\n\n\n  BrowserAuthError.createNativePromptParameterNotSupportedError = function () {\n    return new BrowserAuthError(BrowserAuthErrorMessage.nativePromptNotSupported.code, BrowserAuthErrorMessage.nativePromptNotSupported.desc);\n  };\n\n  return BrowserAuthError;\n}(AuthError);\n\nexport { BrowserAuthError, BrowserAuthErrorMessage };","map":{"version":3,"sources":["../../src/error/BrowserAuthError.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError, StringUtils } from \"@azure/msal-common\";\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const BrowserAuthErrorMessage = {\r\n    pkceNotGenerated: {\r\n        code: \"pkce_not_created\",\r\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: \"crypto_nonexistent\",\r\n        desc: \"The crypto object or function is not available.\"\r\n    },\r\n    httpMethodNotImplementedError: {\r\n        code: \"http_method_not_implemented\",\r\n        desc: \"The HTTP method given has not been implemented in this library.\"\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: \"empty_navigate_uri\",\r\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\r\n    },\r\n    hashEmptyError: {\r\n        code: \"hash_empty_error\",\r\n        desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    hashDoesNotContainStateError: {\r\n        code: \"no_state_in_hash\",\r\n        desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\r\n    },\r\n    hashDoesNotContainKnownPropertiesError: {\r\n        code: \"hash_does_not_contain_known_properties\",\r\n        desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    unableToParseStateError: {\r\n        code: \"unable_to_parse_state\",\r\n        desc: \"Unable to parse state. Please verify that the request originated from msal.\"\r\n    },\r\n    stateInteractionTypeMismatchError: {\r\n        code: \"state_interaction_type_mismatch\",\r\n        desc: \"Hash contains state but the interaction type does not match the caller.\"\r\n    },\r\n    interactionInProgress: {\r\n        code: \"interaction_in_progress\",\r\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    popupWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    emptyWindowError: {\r\n        code: \"empty_window_error\",\r\n        desc: \"window.open returned null or undefined window object.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    monitorPopupTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    monitorIframeTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    redirectInIframeError: {\r\n        code: \"redirect_in_iframe\",\r\n        desc: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: \"block_iframe_reload\",\r\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\r\n    },\r\n    blockAcquireTokenInPopupsError: {\r\n        code: \"block_nested_popups\",\r\n        desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: \"iframe_closed_prematurely\",\r\n        desc: \"The iframe being monitored was closed prematurely.\"\r\n    },\r\n    silentLogoutUnsupportedError: {\r\n        code: \"silent_logout_unsupported\",\r\n        desc: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\"\r\n    },\r\n    noAccountError: {\r\n        code: \"no_account_error\",\r\n        desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\r\n    },\r\n    silentPromptValueError: {\r\n        code: \"silent_prompt_value_error\",\r\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\"\r\n    },\r\n    noTokenRequestCacheError: {\r\n        code: \"no_token_request_cache_error\",\r\n        desc: \"No token request found in cache.\"\r\n    },\r\n    unableToParseTokenRequestCacheError: {\r\n        code: \"unable_to_parse_token_request_cache_error\",\r\n        desc: \"The cached token request could not be parsed.\"\r\n    },\r\n    noCachedAuthorityError: {\r\n        code: \"no_cached_authority_error\",\r\n        desc: \"No cached authority found.\"\r\n    },\r\n    authRequestNotSet: {\r\n        code: \"auth_request_not_set_error\",\r\n        desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    },\r\n    notInBrowserEnvironment: {\r\n        code: \"non_browser_environment\",\r\n        desc: \"Login and token requests are not supported in non-browser environments.\"\r\n    },\r\n    databaseNotOpen: {\r\n        code: \"database_not_open\",\r\n        desc: \"Database is not open!\"\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: \"no_network_connectivity\",\r\n        desc: \"No network connectivity. Check your internet connection.\"\r\n    },\r\n    postRequestFailed: {\r\n        code: \"post_request_failed\",\r\n        desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\r\n    },\r\n    getRequestFailed: {\r\n        code: \"get_request_failed\",\r\n        desc: \"Network request failed. Please check the network trace to determine root cause.\"\r\n    },\r\n    failedToParseNetworkResponse: {\r\n        code: \"failed_to_parse_response\",\r\n        desc: \"Failed to parse network response. Check network trace.\"\r\n    },\r\n    unableToLoadTokenError: {\r\n        code: \"unable_to_load_token\",\r\n        desc: \"Error loading token to cache.\"\r\n    },\r\n    signingKeyNotFoundInStorage: {\r\n        code: \"crypto_key_not_found\",\r\n        desc: \"Cryptographic Key or Keypair not found in browser storage.\"\r\n    },\r\n    authCodeRequired: {\r\n        code: \"auth_code_required\",\r\n        desc: \"An authorization code must be provided (as the `code` property on the request) to this flow.\"\r\n    },\r\n    authCodeOrNativeAccountRequired: {\r\n        code: \"auth_code_or_nativeAccountId_required\",\r\n        desc: \"An authorization code or nativeAccountId must be provided to this flow.\"\r\n    },\r\n    spaCodeAndNativeAccountPresent: {\r\n        code: \"spa_code_and_nativeAccountId_present\",\r\n        desc: \"Request cannot contain both spa code and native account id.\"\r\n    },\r\n    databaseUnavailable: {\r\n        code: \"database_unavailable\",\r\n        desc: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\r\n    },\r\n    unableToAcquireTokenFromNativePlatform: {\r\n        code: \"unable_to_acquire_token_from_native_platform\",\r\n        desc: \"Unable to acquire token from native platform. For a list of possible reasons visit aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    nativeHandshakeTimeout: {\r\n        code: \"native_handshake_timeout\",\r\n        desc: \"Timed out while attempting to establish connection to browser extension\"\r\n    },\r\n    nativeExtensionNotInstalled: {\r\n        code: \"native_extension_not_installed\",\r\n        desc: \"Native extension is not installed. If you think this is a mistake call the initialize function.\"\r\n    },\r\n    nativeConnectionNotEstablished: {\r\n        code: \"native_connection_not_established\",\r\n        desc: \"Connection to native platform has not been established. Please install a compatible browser extension and run initialize(). For more please visit aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    nativeBrokerCalledBeforeInitialize: {\r\n        code: \"native_broker_called_before_initialize\",\r\n        desc: \"You must call and await the initialize function before attempting to call any other MSAL API when native brokering is enabled. For more please visit aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    nativePromptNotSupported: {\r\n        code: \"native_prompt_not_supported\",\r\n        desc: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\"\r\n    }\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserAuthError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n\r\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\r\n        this.name = \"BrowserAuthError\";\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when PKCE is not implemented.\r\n     * @param errDetail\r\n     */\r\n    static createPkceNotGeneratedError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code,\r\n            `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the crypto object is unavailable.\r\n     * @param errDetail\r\n     */\r\n    static createCryptoNotAvailableError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code,\r\n            `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n     * @param method\r\n     */\r\n    static createHttpMethodNotImplementedError(method: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code,\r\n            `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the navigation URI is empty.\r\n     */\r\n    static createEmptyNavigationUriError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     * @param hashValue\r\n     */\r\n    static createEmptyHashError(hashValue: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc} Given Url: ${hashValue}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     */\r\n    static createHashDoesNotContainStateError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value does not contain known properties\r\n     */\r\n    static createHashDoesNotContainKnownPropertiesError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     */\r\n    static createUnableToParseStateError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\r\n     */\r\n    static createStateInteractionTypeMismatchError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n     */\r\n    static createInteractionInProgressError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the popup window could not be opened.\r\n     * @param errDetail\r\n     */\r\n    static createPopupWindowError(errDetail?: string): BrowserAuthError {\r\n        let errorMessage = BrowserAuthErrorMessage.popupWindowError.desc;\r\n        errorMessage = !StringUtils.isEmpty(errDetail) ? `${errorMessage} Details: ${errDetail}` : errorMessage;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowError.code, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when window.open returns an empty window object.\r\n     * @param errDetail\r\n     */\r\n    static createEmptyWindowCreatedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the user closes a popup.\r\n     */\r\n    static createUserCancelledError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code,\r\n            BrowserAuthErrorMessage.userCancelledError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when monitorPopupFromHash times out for a given popup.\r\n     */\r\n    static createMonitorPopupTimeoutError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code,\r\n            BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\r\n     */\r\n    static createMonitorIframeTimeoutError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code,\r\n            BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when navigateWindow is called inside an iframe or brokered applications.\r\n     * @param windowParentCheck\r\n     */\r\n    static createRedirectInIframeError(windowParentCheck: boolean): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code,\r\n            `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an auth reload is done inside an iframe.\r\n     */\r\n    static createBlockReloadInHiddenIframeError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code,\r\n            BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a popup attempts to call an acquireToken API\r\n     * @returns\r\n     */\r\n    static createBlockAcquireTokenInPopupsError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code,\r\n            BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n     */\r\n    static createIframeClosedPrematurelyError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the logout API is called on any of the silent interaction clients\r\n     */\r\n    static createSilentLogoutUnsupportedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentLogoutUnsupportedError.code, BrowserAuthErrorMessage.silentLogoutUnsupportedError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\r\n     */\r\n    static createNoAccountError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n     */\r\n    static createSilentPromptValueError(givenPrompt: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, `${BrowserAuthErrorMessage.silentPromptValueError.desc} Given value: ${givenPrompt}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the cached token request could not be retrieved from the cache\r\n     */\r\n    static createUnableToParseTokenRequestCacheError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code,\r\n            BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the token request could not be retrieved from the cache\r\n     */\r\n    static createNoTokenRequestCacheError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code,\r\n            BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\r\n     */\r\n    static createAuthRequestNotSetError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code,\r\n            BrowserAuthErrorMessage.authRequestNotSet.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the authority could not be retrieved from the cache\r\n     */\r\n    static createNoCachedAuthorityError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code,\r\n            BrowserAuthErrorMessage.noCachedAuthorityError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown if cache type is invalid.\r\n     */\r\n    static createInvalidCacheTypeError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, `${BrowserAuthErrorMessage.invalidCacheType.desc}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when login and token requests are made from a non-browser environment\r\n     */\r\n    static createNonBrowserEnvironmentError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when indexDB database is not open\r\n     */\r\n    static createDatabaseNotOpenError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when token fetch fails due to no internet\r\n     */\r\n    static createNoNetworkConnectivityError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when token fetch fails due to reasons other than internet connectivity\r\n     */\r\n    static createPostRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, `${BrowserAuthErrorMessage.postRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when get request fails due to reasons other than internet connectivity\r\n     */\r\n    static createGetRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, `${BrowserAuthErrorMessage.getRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when network client fails to parse network response\r\n     */\r\n    static createFailedToParseNetworkResponseError(endpoint: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, `${BrowserAuthErrorMessage.failedToParseNetworkResponse.desc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when the necessary information is not available to sideload tokens\r\n     */\r\n    static createUnableToLoadTokenError(errorDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToLoadTokenError.code, `${BrowserAuthErrorMessage.unableToLoadTokenError.desc} | ${errorDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when the queried cryptographic key is not found in IndexedDB\r\n     */\r\n    static createSigningKeyNotFoundInStorageError(keyId: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code, `${BrowserAuthErrorMessage.signingKeyNotFoundInStorage.desc} | No match found for KeyId: ${keyId}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error when an authorization code is required but not provided\r\n     */\r\n    static createAuthCodeRequiredError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeRequired.code, BrowserAuthErrorMessage.authCodeRequired.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error when an authorization code or native account ID is required but not provided\r\n     */\r\n    static createAuthCodeOrNativeAccountIdRequiredError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.code, BrowserAuthErrorMessage.authCodeOrNativeAccountRequired.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error when both authorization code and native account ID are provided\r\n     */\r\n    static createSpaCodeAndNativeAccountIdPresentError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.spaCodeAndNativeAccountPresent.code, BrowserAuthErrorMessage.spaCodeAndNativeAccountPresent.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error when IndexedDB is unavailable\r\n     */\r\n    static createDatabaseUnavailableError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseUnavailable.code, BrowserAuthErrorMessage.databaseUnavailable.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error when native token acquisition is not possible\r\n     */\r\n    static createUnableToAcquireTokenFromNativePlatformError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.code, BrowserAuthErrorMessage.unableToAcquireTokenFromNativePlatform.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when Handshake with browser extension times out\r\n     */\r\n    static createNativeHandshakeTimeoutError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeHandshakeTimeout.code, BrowserAuthErrorMessage.nativeHandshakeTimeout.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when browser extension is not installed\r\n     */\r\n    static createNativeExtensionNotInstalledError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeExtensionNotInstalled.code, BrowserAuthErrorMessage.nativeExtensionNotInstalled.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error when native connection has not been established\r\n     * @returns\r\n     */\r\n    static createNativeConnectionNotEstablishedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeConnectionNotEstablished.code, BrowserAuthErrorMessage.nativeConnectionNotEstablished.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when the initialize function hasn't been called\r\n     */\r\n    static createNativeBrokerCalledBeforeInitialize(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.code, BrowserAuthErrorMessage.nativeBrokerCalledBeforeInitialize.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when requesting a token directly from the native platform with an unsupported prompt parameter e.g. select_account, login or create\r\n     * These requests must go through eSTS to ensure eSTS is aware of the new account\r\n     */\r\n    static createNativePromptParameterNotSupportedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.nativePromptNotSupported.code, BrowserAuthErrorMessage.nativePromptNotSupported.desc);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}