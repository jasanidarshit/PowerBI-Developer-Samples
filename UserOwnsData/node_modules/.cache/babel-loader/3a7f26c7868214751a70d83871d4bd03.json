{"ast":null,"code":"/*! @azure/msal-browser v2.39.0 2024-06-06 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { InteractionRequiredAuthError, AuthError } from '@azure/msal-common';\nimport { BrowserAuthError } from './BrowserAuthError.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar NativeStatusCode;\n\n(function (NativeStatusCode) {\n  NativeStatusCode[\"USER_INTERACTION_REQUIRED\"] = \"USER_INTERACTION_REQUIRED\";\n  NativeStatusCode[\"USER_CANCEL\"] = \"USER_CANCEL\";\n  NativeStatusCode[\"NO_NETWORK\"] = \"NO_NETWORK\";\n  NativeStatusCode[\"TRANSIENT_ERROR\"] = \"TRANSIENT_ERROR\";\n  NativeStatusCode[\"PERSISTENT_ERROR\"] = \"PERSISTENT_ERROR\";\n  NativeStatusCode[\"DISABLED\"] = \"DISABLED\";\n  NativeStatusCode[\"ACCOUNT_UNAVAILABLE\"] = \"ACCOUNT_UNAVAILABLE\";\n})(NativeStatusCode || (NativeStatusCode = {}));\n\nvar NativeAuthErrorMessage = {\n  extensionError: {\n    code: \"ContentError\"\n  },\n  userSwitch: {\n    code: \"user_switch\",\n    desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n  },\n  tokensNotFoundInCache: {\n    code: \"tokens_not_found_in_internal_memory_cache\",\n    desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\n  }\n};\n\nvar NativeAuthError =\n/** @class */\nfunction (_super) {\n  __extends(NativeAuthError, _super);\n\n  function NativeAuthError(errorCode, description, ext) {\n    var _this = _super.call(this, errorCode, description) || this;\n\n    Object.setPrototypeOf(_this, NativeAuthError.prototype);\n    _this.name = \"NativeAuthError\";\n    _this.ext = ext;\n    return _this;\n  }\n  /**\r\n   * These errors should result in a fallback to the 'standard' browser based auth flow.\r\n   */\n\n\n  NativeAuthError.prototype.isFatal = function () {\n    if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n      return true;\n    }\n\n    switch (this.errorCode) {\n      case NativeAuthErrorMessage.extensionError.code:\n        return true;\n\n      default:\n        return false;\n    }\n  };\n  /**\r\n   * Create the appropriate error object based on the WAM status code.\r\n   * @param code\r\n   * @param description\r\n   * @param ext\r\n   * @returns\r\n   */\n\n\n  NativeAuthError.createError = function (code, description, ext) {\n    if (ext && ext.status) {\n      switch (ext.status) {\n        case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n          return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n\n        case NativeStatusCode.USER_INTERACTION_REQUIRED:\n          return new InteractionRequiredAuthError(code, description);\n\n        case NativeStatusCode.USER_CANCEL:\n          return BrowserAuthError.createUserCancelledError();\n\n        case NativeStatusCode.NO_NETWORK:\n          return BrowserAuthError.createNoNetworkConnectivityError();\n      }\n    }\n\n    return new NativeAuthError(code, description, ext);\n  };\n  /**\r\n   * Creates user switch error when the user chooses a different account in the native broker prompt\r\n   * @returns\r\n   */\n\n\n  NativeAuthError.createUserSwitchError = function () {\n    return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n  };\n  /**\r\n   * Creates a tokens not found error when the internal cache look up fails\r\n   * @returns NativeAuthError: tokensNotFoundInCache\r\n   */\n\n\n  NativeAuthError.createTokensNotFoundInCacheError = function () {\n    return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n  };\n\n  return NativeAuthError;\n}(AuthError);\n\nexport { NativeAuthError, NativeAuthErrorMessage, NativeStatusCode };","map":{"version":3,"sources":["../../src/error/NativeAuthError.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError, InteractionRequiredAuthError } from \"@azure/msal-common\";\r\nimport { BrowserAuthError } from \"./BrowserAuthError\";\r\n\r\nexport type OSError = {\r\n    error: number;\r\n    protocol_error: string;\r\n    properties: object;\r\n    status: string;\r\n    retryable?: boolean;\r\n};\r\n\r\nexport enum NativeStatusCode {\r\n    USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\",\r\n    USER_CANCEL = \"USER_CANCEL\",\r\n    NO_NETWORK = \"NO_NETWORK\",\r\n    TRANSIENT_ERROR = \"TRANSIENT_ERROR\",\r\n    PERSISTENT_ERROR = \"PERSISTENT_ERROR\",\r\n    DISABLED = \"DISABLED\",\r\n    ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\"\r\n}\r\n\r\nexport const NativeAuthErrorMessage = {\r\n    extensionError: {\r\n        code: \"ContentError\"\r\n    },\r\n    userSwitch: {\r\n        code: \"user_switch\",\r\n        desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\r\n    },\r\n    tokensNotFoundInCache: {\r\n        code: \"tokens_not_found_in_internal_memory_cache\",\r\n        desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\r\n    }\r\n};\r\n\r\nexport class NativeAuthError extends AuthError {\r\n    ext: OSError | undefined;\r\n\r\n    constructor(errorCode: string, description: string, ext?: OSError) {\r\n        super(errorCode, description);\r\n\r\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\r\n        this.name = \"NativeAuthError\";\r\n        this.ext = ext;\r\n    }\r\n\r\n    /**\r\n     * These errors should result in a fallback to the 'standard' browser based auth flow.\r\n     */\r\n    isFatal(): boolean {\r\n        if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\r\n            return true;\r\n        }\r\n\r\n        switch (this.errorCode) {\r\n            case NativeAuthErrorMessage.extensionError.code:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the appropriate error object based on the WAM status code.\r\n     * @param code\r\n     * @param description\r\n     * @param ext\r\n     * @returns\r\n     */\r\n    static createError(code: string, description: string, ext?: OSError): AuthError {\r\n        if (ext && ext.status) {\r\n            switch (ext.status) {\r\n                case NativeStatusCode.ACCOUNT_UNAVAILABLE:\r\n                    return InteractionRequiredAuthError.createNativeAccountUnavailableError();\r\n                case NativeStatusCode.USER_INTERACTION_REQUIRED:\r\n                    return new InteractionRequiredAuthError(code, description);\r\n                case NativeStatusCode.USER_CANCEL:\r\n                    return BrowserAuthError.createUserCancelledError();\r\n                case NativeStatusCode.NO_NETWORK:\r\n                    return BrowserAuthError.createNoNetworkConnectivityError();\r\n            }\r\n        }\r\n\r\n        return new NativeAuthError(code, description, ext);\r\n    }\r\n\r\n    /**\r\n     * Creates user switch error when the user chooses a different account in the native broker prompt\r\n     * @returns\r\n     */\r\n    static createUserSwitchError(): NativeAuthError {\r\n        return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates a tokens not found error when the internal cache look up fails\r\n     * @returns NativeAuthError: tokensNotFoundInCache\r\n     */\r\n    static createTokensNotFoundInCacheError(): NativeAuthError {\r\n        return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}